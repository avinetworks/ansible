#!/usr/bin/python3
#
# @author: Gaurav Rastogi (grastogi@avinetworks.com)
#          Eric Anderson (eanderson@avinetworks.com)
# module_check: supported
# Avi Version: 17.1.1
#
# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
#
from __future__ import (absolute_import, division, print_function)

ANSIBLE_METADATA = {'metadata_version': '1.1',
                    'status': ['preview'],
                    'supported_by': 'community'}


import sys
from ansible.module_utils.basic import AnsibleModule
try:
    from avi.sdk.utils.ansible_utils import avi_common_argument_spec
    from avi.sdk.utils.ansible_utils import (
        avi_ansible_api, avi_common_argument_spec)
    HAS_AVI = True
except ImportError:
    HAS_AVI = False


def main():
    argument_specs = dict(
        state=dict(default='present',
                   choices=['absent', 'present']),
        avi_api_update_method=dict(default='put',
                                   choices=['put', 'patch']),
        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),
        accelerated_networking=dict(type='bool',),
        active_standby=dict(type='bool',),
        additional_config_memory=dict(type='int',),
        advertise_backend_networks=dict(type='bool',),
        aggressive_failure_detection=dict(type='bool',),
        algo=dict(type='str',),
        allow_burst=dict(type='bool',),
        app_cache_percent=dict(type='int',),
        app_cache_threshold=dict(type='int',),
        app_learning_memory_percent=dict(type='int',),
        archive_shm_limit=dict(type='int',),
        async_ssl=dict(type='bool',),
        async_ssl_threads=dict(type='int',),
        auto_rebalance=dict(type='bool',),
        auto_rebalance_capacity_per_se=dict(type='list',),
        auto_rebalance_criteria=dict(type='list',),
        auto_rebalance_interval=dict(type='int',),
        auto_redistribute_active_standby_load=dict(type='bool',),
        availability_zone_refs=dict(type='list',),
        bgp_state_update_interval=dict(type='int',),
        buffer_se=dict(type='int',),
        cloud_ref=dict(type='str',),
        compress_ip_rules_for_each_ns_subnet=dict(type='bool',),
        config_debugs_on_all_cores=dict(type='bool',),
        connection_memory_percentage=dict(type='int',),
        core_shm_app_cache=dict(type='bool',),
        core_shm_app_learning=dict(type='bool',),
        cpu_reserve=dict(type='bool',),
        cpu_socket_affinity=dict(type='bool',),
        custom_securitygroups_data=dict(type='list',),
        custom_securitygroups_mgmt=dict(type='list',),
        custom_tag=dict(type='list',),
        data_network_id=dict(type='str',),
        datascript_timeout=dict(type='int',),
        dedicated_dispatcher_core=dict(type='bool',),
        description=dict(type='str',),
        disable_avi_securitygroups=dict(type='bool',),
        disable_csum_offloads=dict(type='bool',),
        disable_flow_probes=dict(type='bool',),
        disable_gro=dict(type='bool',),
        disable_se_memory_check=dict(type='bool',),
        disable_tso=dict(type='bool',),
        disk_per_se=dict(type='int',),
        distribute_load_active_standby=dict(type='bool',),
        distribute_queues=dict(type='bool',),
        distribute_vnics=dict(type='bool',),
        dp_aggressive_deq_interval_msec=dict(type='int',),
        dp_aggressive_enq_interval_msec=dict(type='int',),
        dp_aggressive_hb_frequency=dict(type='int',),
        dp_aggressive_hb_timeout_count=dict(type='int',),
        dp_deq_interval_msec=dict(type='int',),
        dp_enq_interval_msec=dict(type='int',),
        dp_hb_frequency=dict(type='int',),
        dp_hb_timeout_count=dict(type='int',),
        enable_gratarp_permanent=dict(type='bool',),
        enable_hsm_priming=dict(type='bool',),
        enable_multi_lb=dict(type='bool',),
        enable_pcap_tx_ring=dict(type='bool',),
        enable_routing=dict(type='bool',),
        enable_vip_on_all_interfaces=dict(type='bool',),
        enable_vmac=dict(type='bool',),
        ephemeral_portrange_end=dict(type='int',),
        ephemeral_portrange_start=dict(type='int',),
        extra_config_multiplier=dict(type='float',),
        extra_shared_config_memory=dict(type='int',),
        floating_intf_ip=dict(type='list',),
        floating_intf_ip_se_2=dict(type='list',),
        flow_table_new_syn_max_entries=dict(type='int',),
        free_list_size=dict(type='int',),
        gcp_config=dict(type='dict',),
        gratarp_permanent_periodicity=dict(type='int',),
        ha_mode=dict(type='str',),
        handle_per_pkt_attack=dict(type='bool',),
        hardwaresecuritymodulegroup_ref=dict(type='str',),
        heap_minimum_config_memory=dict(type='int',),
        hm_on_standby=dict(type='bool',),
        host_attribute_key=dict(type='str',),
        host_attribute_value=dict(type='str',),
        host_gateway_monitor=dict(type='bool',),
        hypervisor=dict(type='str',),
        ignore_rtt_threshold=dict(type='int',),
        ingress_access_data=dict(type='str',),
        ingress_access_mgmt=dict(type='str',),
        instance_flavor=dict(type='str',),
        instance_flavor_info=dict(type='dict',),
        iptables=dict(type='list',),
        labels=dict(type='list',),
        least_load_core_selection=dict(type='bool',),
        license_tier=dict(type='str',),
        license_type=dict(type='str',),
        log_disksz=dict(type='int',),
        log_malloc_failure=dict(type='bool',),
        max_concurrent_external_hm=dict(type='int',),
        max_cpu_usage=dict(type='int',),
        max_memory_per_mempool=dict(type='int',),
        max_num_se_dps=dict(type='int',),
        max_public_ips_per_lb=dict(type='int',),
        max_queues_per_vnic=dict(type='int',),
        max_rules_per_lb=dict(type='int',),
        max_scaleout_per_vs=dict(type='int',),
        max_se=dict(type='int',),
        max_vs_per_se=dict(type='int',),
        mem_reserve=dict(type='bool',),
        memory_for_config_update=dict(type='int',),
        memory_per_se=dict(type='int',),
        mgmt_network_ref=dict(type='str',),
        mgmt_subnet=dict(type='dict',),
        min_cpu_usage=dict(type='int',),
        min_scaleout_per_vs=dict(type='int',),
        min_se=dict(type='int',),
        minimum_connection_memory=dict(type='int',),
        minimum_required_config_memory=dict(type='int',),
        n_log_streaming_threads=dict(type='int',),
        name=dict(type='str', required=True),
        nat_flow_tcp_closed_timeout=dict(type='int',),
        nat_flow_tcp_established_timeout=dict(type='int',),
        nat_flow_tcp_half_closed_timeout=dict(type='int',),
        nat_flow_tcp_handshake_timeout=dict(type='int',),
        nat_flow_udp_noresponse_timeout=dict(type='int',),
        nat_flow_udp_response_timeout=dict(type='int',),
        netlink_poller_threads=dict(type='int',),
        netlink_sock_buf_size=dict(type='int',),
        non_significant_log_throttle=dict(type='int',),
        ns_helper_deq_interval_msec=dict(type='int',),
        num_dispatcher_cores=dict(type='int',),
        num_flow_cores_sum_changes_to_ignore=dict(type='int',),
        objsync_config=dict(type='dict',),
        objsync_port=dict(type='int',),
        openstack_availability_zone=dict(type='str',),
        openstack_availability_zones=dict(type='list',),
        openstack_mgmt_network_name=dict(type='str',),
        openstack_mgmt_network_uuid=dict(type='str',),
        os_reserved_memory=dict(type='int',),
        pcap_tx_mode=dict(type='str',),
        pcap_tx_ring_rd_balancing_factor=dict(type='int',),
        per_app=dict(type='bool',),
        per_vs_admission_control=dict(type='bool',),
        placement_mode=dict(type='str',),
        realtime_se_metrics=dict(type='dict',),
        reboot_on_panic=dict(type='bool',),
        reboot_on_stop=dict(type='bool',),
        resync_time_interval=dict(type='int',),
        se_bandwidth_type=dict(type='str',),
        se_delayed_flow_delete=dict(type='bool',),
        se_deprovision_delay=dict(type='int',),
        se_dos_profile=dict(type='dict',),
        se_dp_hm_drops=dict(type='int',),
        se_dp_max_hb_version=dict(type='int',),
        se_dp_vnic_queue_stall_event_sleep=dict(type='int',),
        se_dp_vnic_queue_stall_threshold=dict(type='int',),
        se_dp_vnic_queue_stall_timeout=dict(type='int',),
        se_dp_vnic_restart_on_queue_stall_count=dict(type='int',),
        se_dp_vnic_stall_se_restart_window=dict(type='int',),
        se_dpdk_pmd=dict(type='int',),
        se_flow_probe_retries=dict(type='int',),
        se_flow_probe_retry_timer=dict(type='int',),
        se_flow_probe_timer=dict(type='int',),
        se_group_analytics_policy=dict(type='dict',),
        se_hyperthreaded_mode=dict(type='str',),
        se_ip_encap_ipc=dict(type='int',),
        se_ipc_udp_port=dict(type='int',),
        se_kni_burst_factor=dict(type='int',),
        se_l3_encap_ipc=dict(type='int',),
        se_lro=dict(type='bool',),
        se_mp_ring_retry_count=dict(type='int',),
        se_mtu=dict(type='int',),
        se_name_prefix=dict(type='str',),
        se_pcap_lookahead=dict(type='bool',),
        se_pcap_pkt_count=dict(type='int',),
        se_pcap_pkt_sz=dict(type='int',),
        se_pcap_qdisc_bypass=dict(type='bool',),
        se_pcap_reinit_frequency=dict(type='int',),
        se_pcap_reinit_threshold=dict(type='int',),
        se_probe_port=dict(type='int',),
        se_remote_punt_udp_port=dict(type='int',),
        se_rl_prop=dict(type='dict',),
        se_routing=dict(type='bool',),
        se_rum_sampling_nav_interval=dict(type='int',),
        se_rum_sampling_nav_percent=dict(type='int',),
        se_rum_sampling_res_interval=dict(type='int',),
        se_rum_sampling_res_percent=dict(type='int',),
        se_sb_dedicated_core=dict(type='bool',),
        se_sb_threads=dict(type='int',),
        se_thread_multiplier=dict(type='int',),
        se_tracert_port_range=dict(type='dict',),
        se_tunnel_mode=dict(type='int',),
        se_tunnel_udp_port=dict(type='int',),
        se_tx_batch_size=dict(type='int',),
        se_txq_threshold=dict(type='int',),
        se_udp_encap_ipc=dict(type='int',),
        se_use_dpdk=dict(type='int',),
        se_vnic_tx_sw_queue_flush_frequency=dict(type='int',),
        se_vnic_tx_sw_queue_size=dict(type='int',),
        se_vs_hb_max_pkts_in_batch=dict(type='int',),
        se_vs_hb_max_vs_in_pkt=dict(type='int',),
        self_se_election=dict(type='bool',),
        send_se_ready_timeout=dict(type='int',),
        service_ip6_subnets=dict(type='list',),
        service_ip_subnets=dict(type='list',),
        shm_minimum_config_memory=dict(type='int',),
        significant_log_throttle=dict(type='int',),
        ssl_preprocess_sni_hostname=dict(type='bool',),
        tenant_ref=dict(type='str',),
        transient_shared_memory_max=dict(type='int',),
        udf_log_throttle=dict(type='int',),
        url=dict(type='str',),
        use_hyperthreaded_cores=dict(type='bool',),
        use_objsync=dict(type='bool',),
        use_standard_alb=dict(type='bool',),
        uuid=dict(type='str',),
        vcenter_clusters=dict(type='dict',),
        vcenter_datastore_mode=dict(type='str',),
        vcenter_datastores=dict(type='list',),
        vcenter_datastores_include=dict(type='bool',),
        vcenter_folder=dict(type='str',),
        vcenter_hosts=dict(type='dict',),
        vcenters=dict(type='list',),
        vcpus_per_se=dict(type='int',),
        vip_asg=dict(type='dict',),
        vnic_dhcp_ip_check_interval=dict(type='int',),
        vnic_dhcp_ip_max_retries=dict(type='int',),
        vnic_ip_delete_interval=dict(type='int',),
        vnic_probe_interval=dict(type='int',),
        vnic_rpc_retry_interval=dict(type='int',),
        vnicdb_cmd_history_size=dict(type='int',),
        vs_host_redundancy=dict(type='bool',),
        vs_scalein_timeout=dict(type='int',),
        vs_scalein_timeout_for_upgrade=dict(type='int',),
        vs_scaleout_timeout=dict(type='int',),
        vs_se_scaleout_additional_wait_time=dict(type='int',),
        vs_se_scaleout_ready_timeout=dict(type='int',),
        vs_switchover_timeout=dict(type='int',),
        vss_placement=dict(type='dict',),
        vss_placement_enabled=dict(type='bool',),
        waf_learning_interval=dict(type='int',),
        waf_learning_memory=dict(type='int',),
        waf_mempool=dict(type='bool',),
        waf_mempool_size=dict(type='int',),
    )
    if not HAS_AVI:
        return sys.exit(
            'Avi python API SDK (avisdk>=17.1) or requests is not installed. '
            'For more details visit https://github.com/avinetworks/sdk.')
    argument_specs.update(avi_common_argument_spec())
    module = AnsibleModule(
        argument_spec=argument_specs, supports_check_mode=True)

    return avi_ansible_api(module, 'serviceenginegroup',
                           set())

if __name__ == '__main__':
    main()

